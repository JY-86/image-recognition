{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\_Main\\\\GitRepositories\\\\image-recognition\\\\client\\\\src\\\\components\\\\Register\\\\Register.js\";\nimport React from 'react';\nimport 'tachyons';\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onInputChange = (e, property) => {\n      this.setState({\n        [property]: e.target.value\n      });\n      console.log(this.state.email);\n    };\n\n    this.onSubmit = async () => {\n      // register user with backend api\n      let res = await fetch(\"/register\", {\n        method: 'post',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: this.state.name,\n          email: this.state.email,\n          password: this.state.password\n        })\n      });\n\n      try {\n        res = await res.json();\n        console.log(res);\n\n        if (res.valid) {\n          this.props.loadUser(res.user);\n          this.props.onRouteChange('home');\n        } else {\n          this.setState({\n            regError: true\n          });\n        }\n      } catch (err) {\n        //server error \n        this.setState({\n          serverError: true\n        });\n      }\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      regError: false,\n      serverError: false\n    };\n  }\n\n  getErrorMessages() {\n    let output = null;\n\n    if (this.state.regError) {\n      output = /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"red b\",\n        children: \"A user with that email already exists. Please select a different email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 22\n      }, this);\n    } else if (this.state.serverError) {\n      output = /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"red b\",\n        children: \"There was an internal server error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 22\n      }, this);\n    }\n\n    return output;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"pa4 black-80 tc shadow-5 br2 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"measure center\",\n        children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n          id: \"sign_up\",\n          className: \"ba b--transparent ph0 mh0\",\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            className: \"f2 fw6 ph0 mh0\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"db fw6 lh-copy f6\",\n              htmlFor: \"email-address\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 b--black\",\n              type: \"text\",\n              name: \"name\",\n              id: \"name\",\n              onChange: e => this.onInputChange(e, \"name\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"db fw6 lh-copy f6\",\n              htmlFor: \"email-address\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 b--black\",\n              type: \"email\",\n              name: \"email-address\",\n              id: \"email-address\",\n              onChange: e => this.onInputChange(e, \"email\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mv3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"db fw6 lh-copy f6\",\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 b--black\",\n              type: \"password\",\n              name: \"password\",\n              id: \"password\",\n              onChange: e => this.onInputChange(e, \"password\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib bw\",\n            type: \"submit\",\n            value: \"Register\",\n            onClick: this.onSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), this.getErrorMessages()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/_Main/GitRepositories/image-recognition/client/src/components/Register/Register.js"],"names":["React","Register","Component","constructor","props","onInputChange","e","property","setState","target","value","console","log","state","email","onSubmit","res","fetch","method","headers","body","JSON","stringify","name","password","json","valid","loadUser","user","onRouteChange","regError","err","serverError","getErrorMessages","output","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'tachyons';\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            regError: false,\r\n            serverError: false,\r\n        };\r\n    }\r\n\r\n    onInputChange = (e, property) => {\r\n        this.setState({[property]: e.target.value});\r\n        console.log(this.state.email);\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        // register user with backend api\r\n        let res = await fetch(\"/register\", {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name: this.state.name,\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            })\r\n        });\r\n        try {\r\n            res = await res.json();\r\n            console.log(res);\r\n            if (res.valid) {\r\n                this.props.loadUser(res.user);\r\n                this.props.onRouteChange('home');\r\n            }\r\n            else {\r\n                this.setState({regError: true});\r\n            }\r\n        }\r\n        catch (err) { //server error \r\n            this.setState({serverError: true});\r\n        }\r\n        \r\n    }\r\n\r\n    getErrorMessages() {\r\n        let output = null;\r\n        if (this.state.regError) {\r\n            output = <p className=\"red b\">A user with that email already exists. Please select a different email</p>\r\n        }\r\n        else if (this.state.serverError) {\r\n            output = <p className=\"red b\">There was an internal server error</p>\r\n        }\r\n        return output;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <main className=\"pa4 black-80 tc shadow-5 br2 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 center\">\r\n                <div className=\"measure center\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f2 fw6 ph0 mh0\">Register</legend>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Name</label>\r\n                            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 b--black\" type=\"text\" name=\"name\"  id=\"name\"\r\n                            onChange={(e) => this.onInputChange(e, \"name\")}/>\r\n                        </div>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 b--black\" type=\"email\" name=\"email-address\"  id=\"email-address\"\r\n                            onChange={(e) => this.onInputChange(e, \"email\")}/>\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                            <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 b--black\" type=\"password\" name=\"password\"  id=\"password\"\r\n                            onChange={(e) => this.onInputChange(e, \"password\")}/>\r\n                        </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                        <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib bw\" type=\"submit\" value=\"Register\"\r\n                        onClick={this.onSubmit}/>\r\n                    </div>\r\n                    {this.getErrorMessages()}\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}